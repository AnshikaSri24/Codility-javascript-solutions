TapeEquilibrium
Minimize the value |(A[0] + ... + A[P-1]) - (A[P] + ... + A[N-1])|

Task description
A non-empty array A consisting of N integers is given. Array A represents numbers on a tape.

Any integer P, such that 0 < P < N, splits this tape into two non-empty parts: A[0], A[1], ..., A[P - 1] and A[P], A[P + 1], ..., A[N - 1].

The difference between the two parts is the value of: |(A[0] + A[1] + ... + A[P - 1]) - (A[P] + A[P + 1] + ... + A[N - 1])|

In other words, it is the absolute difference between the sum of the first part and the sum of the second part.

For example, consider array A such that:

  A[0] = 3
  A[1] = 1
  A[2] = 2
  A[3] = 4
  A[4] = 3
We can split this tape in four places:

P = 1, difference = |3 - 10| = 7
P = 2, difference = |4 - 9| = 5
P = 3, difference = |6 - 7| = 1
P = 4, difference = |10 - 3| = 7
Write a function:

function solution(A);

that, given a non-empty array A of N integers, returns the minimal difference that can be achieved.

For example, given:

  A[0] = 3
  A[1] = 1
  A[2] = 2
  A[3] = 4
  A[4] = 3
the function should return 1, as explained above.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [2..100,000];
each element of array A is an integer within the range [-1,000..1,000].

Score - 84%

Solution - https://app.codility.com/demo/results/training72S2G5-TH3/

// you can write to stdout for debugging purposes, e.g.
// console.log('this is a debug message');

function solution(A) {
    // write your code in JavaScript (Node.js 8.9.4)
    // write your code in JavaScript (Node.js 8.9.4)
    var sumright = 0;
    var sumleft = 0;
    var ans = 0;

    for (var i =1;i<A.length;i++)
        sumright += A[i];

    sumleft = A[0];
    ans =Math.abs(sumright + sumleft);

    for (var P=1; P<A.length; P++)
    {
        if (Math.abs(sumleft - sumright) < ans)
            ans = Math.abs(sumleft - sumright);
        sumleft += A[P];
        sumright -=A[P];
    }
    return ans;  
    
    //old code - Got 53%
    //var length = A.length;
    //var i;
    //var j=1;
    //var absoluteValue = -1;
    //for(j=1; j<length; j++){
    //    var firstValue = 0;
    //    var secondValue = 0;
    //    for(i=0; i<length; i++){
    //        if(i < j){
    //            firstValue = firstValue + A[i];
    //        }
    //        else{
    //            secondValue = secondValue + A[i];   
    //        }
    //    }
    //    //console.log(Math.abs(firstValue - secondValue));
    //    if( Math.abs(firstValue - secondValue) <  absoluteValue || j==1 ){
    //        absoluteValue = Math.abs(firstValue - secondValue);
    //    }
    //}
    //return absoluteValue;
}